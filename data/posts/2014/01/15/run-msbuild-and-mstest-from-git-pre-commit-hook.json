{"type":"post","json_base":"data/posts","json":"data/posts/2014/01/15/run-msbuild-and-mstest-from-git-pre-commit-hook.json","path":"2014/01/15/run-msbuild-and-mstest-from-git-pre-commit-hook/","data":{"title":"通过Git Pre-Commit Hook执行MSBuild和MSTest","content":"<p>Git的pre-commit hook会在commit之前执行，当脚本的返回值不为0的时候，终止commit过程，因此可以把编译、测试、lint等workflow放到这一hook中，减少引入到版本库中的bug。</p>\n<p>以下脚本用于调用MSBuild和MSTest对C#工程在commit前进行build和test。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh&#10; &#10;# Helper&#10;safeRunCommand() &#123;&#10;    typeset cmd=&#34;$*&#34;&#10;    typeset ret_code&#10; &#10;    echo cmd=$cmd&#10;    eval $cmd&#10;    ret_code=$?&#10;    if [ $ret_code != 0 ]; then&#10;        printf &#34;Error : [%d] when executing command: &#39;$cmd&#39;&#34; $ret_code&#10;        exit $ret_code&#10;    fi&#10;&#125;&#10; &#10;# Path To MSBuild.exe&#10;MSBuild=&#34;/c/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuild.exe&#34;&#10;# Path To MSTest.exe&#10;MSTest=&#34;/d/Program\\ Files\\ \\(x86\\)/Microsoft\\ Visual\\ Studio\\ 11.0/Common7/IDE/MSTest.exe&#34;&#10;# Get Project root path (without tailing /)&#10;ProjectRoot=&#34;$(git rev-parse --show-toplevel)&#34;&#10; &#10;# Test Containers (without leading /)&#10;Tests=(&#10;    &#34;ConsoleSharp.Tests/bin/Debug/ConsoleSharp.Tests.dll&#34; &#10;    &#34;Mirror.Test/bin/Debug/Mirror.Test.dll&#34;&#10;)&#10; &#10; &#10;# Build&#10;safeRunCommand $MSBuild $ProjectRoot/ConsoleSharp.sln&#10; &#10;# Test&#10;Args=(&#34;$&#123;Tests[@]/#//testcontainer:$ProjectRoot/&#125;&#34;)&#10;safeRunCommand $MSTest $(eval &#39;echo &#34;$&#123;Args[*]&#125;&#34;&#39;)</span><br></pre></td></tr></table></figure>\n","date":"2014-01-15T13:06:56.000Z","path":"2014/01/15/run-msbuild-and-mstest-from-git-pre-commit-hook/","isDark":true,"featureColor":"#2b6a7d","featureImage":"/image/stock/3.jpg","excerpt":"","featureSwatch":{"Vibrant":{"color":"#2b6a7d","isDark":true,"contrast":6.152506571402196},"Muted":{"color":"#628d9b","isDark":true,"contrast":3.8818866665042275},"DarkVibrant":{"color":"#08536a","isDark":true,"contrast":13.30121420712154},"DarkMuted":{"color":"#4d7e8e","isDark":true,"contrast":4.693454244598322},"LightVibrant":{"color":"#74d4e4","isDark":false,"contrast":1.7100585291773622},"LightMuted":{"color":"#769ca9","isDark":false,"contrast":2.958324937392382}},"json":"data/posts/2014/01/15/run-msbuild-and-mstest-from-git-pre-commit-hook.json","tags":[{"name":"Shell","slug":"Shell","path":"tags/Shell/","permalink":"http://catx.me/tags/Shell/","postCount":1},{"name":"git","slug":"git","path":"tags/git/","permalink":"http://catx.me/tags/git/","postCount":2},{"name":"测试","slug":"测试","path":"tags/测试/","permalink":"http://catx.me/tags/测试/","postCount":2}],"categories":[{"name":"挨踢","slug":"挨踢","path":"categories/挨踢/","permalink":"http://catx.me/categories/挨踢/","postCount":24}]},"sha1":"9c8a1b91288e1cf9d8358b4ecdba83f63637e622","prev":{"title":"SAE中文关键字提取服务","content":"<p><img src=\"/images/ea44d54a8c5dfedd723e46cf537ac31ab84a791d.png\" alt=\"\"></p>\n<h2 id=\"u4ECB_u7ECD\"><a href=\"#u4ECB_u7ECD\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>SAE提供了效果不错的<a href=\"http://sae.sina.com.cn/doc/python/segment.html\" target=\"_blank\" rel=\"external\">中文分词服务</a>，于是花了点时间做了个基于TF-IDF的关键字提取算法。</p>\n<p>语料库来自<a href=\"http://www.cncorpus.org/\" target=\"_blank\" rel=\"external\">语料库在线</a>。</p>\n<h2 id=\"TF-IDF\"><a href=\"#TF-IDF\" class=\"headerlink\" title=\"TF-IDF\"></a>TF-IDF</h2><p>在把一篇文章分词过后，要从中提取出最能代表文章主题的关键字，最young最simple的办法就是基于词频(TF, term frequency)：</p>\n<p>$$TF(t, d) = f(t, d)$$</p>\n<p>其中$t$为一个单词，$d$为文档，$f(t, d)$为这个单词在文档中出现的频率。</p>\n<p>这样带来的问题很显然，即使通过停止词干掉一些频率极高，但对内容毫无贡献的词汇（如“的、地、得”），依然无法排除某些本身频率就很高的词汇。<br>比如在天朝，“中国”一词在所有文章里都有很高的出现概率，但并不见得所有文章都和天朝相关。</p>\n<p>假如有一个语料库，包含了大量具有代表性的文章。如果一个词汇在这个语料库里大量出现，则认为这个词汇本身就是个高频词；<br>如果一个词汇在语料库里出现频率不高，但在一篇文章里频繁出现，显然这个词汇是这篇文章里特有的。<br>基于这个想法，就引入了IDF(inverse document frequency):<br><span>$$IDF(t, D) = log \\frac{N}{ 1 + \\|\\{d \\in D: t \\in D\\}\\| }$$</span><!-- Has MathJax --></p>\n<p>TF-IDF值，就能用来判断一个词汇是否是一篇文章里的关键字：</p>\n<p>$$ TFIDF = w(t) * TF(t, d) * IDF(t, D) $$</p>\n<p>这里加入了一个权重函数，按词性对词汇进行过滤：<br><span>$$w(t) = \\left\\{\n  \\begin{array}{l l}\n    0.8 & t\\ is\\ v.\\ or\\ n.\\\\\n    0.6 & t\\ is\\ adv.\\ or\\ adj.\\\\\n    0 & other\n  \\end{array} \\right.$$</span><!-- Has MathJax --></p>\n<h2 id=\"u94FE_u63A5\"><a href=\"#u94FE_u63A5\" class=\"headerlink\" title=\"链接\"></a>链接</h2><ul>\n<li><a href=\"http://catx.me/seger-demo/\">Demo</a></li>\n</ul>\n<div id=\"badge-container-akfish-seger-demo-0b5e19\" class=\"hexo-github\" style=\"width: 100%\"></div>\n<script src=\"/hexo-github/badge.js\"></script>\n<script type=\"text/javascript\">\n  loadStyle(\"/hexo-github/style.css\");\n  loadStyle(\"/hexo-github/octicons/octicons.css\");\n  new Badge(\"#badge-container-akfish-seger-demo-0b5e19\", \"akfish\", \"seger-demo\", \"0b5e19\", false);\n</script>\n\n<div id=\"badge-container-akfish-seger-b64d75\" class=\"hexo-github\" style=\"width: 100%\"></div>\n<script src=\"/hexo-github/badge.js\"></script>\n<script type=\"text/javascript\">\n  loadStyle(\"/hexo-github/style.css\");\n  loadStyle(\"/hexo-github/octicons/octicons.css\");\n  new Badge(\"#badge-container-akfish-seger-b64d75\", \"akfish\", \"seger\", \"b64d75\", false);\n</script>\n\n<ul>\n<li><a href=\"https://github.com/akfish/seger-demo\" target=\"_blank\" rel=\"external\">GitHub - Seger Demo</a></li>\n<li><a href=\"https://github.com/akfish/seger\" target=\"_blank\" rel=\"external\">GitHub - Seger</a></li>\n</ul>\n","date":"2014-08-30T22:29:46.000Z","path":"2014/08/31/sae-chinese-keyword-extraction-service/","isDark":true,"featureColor":"#2b6a7d","featureImage":"/image/stock/3.jpg","excerpt":"","featureSwatch":{"Vibrant":{"color":"#2b6a7d","isDark":true,"contrast":6.152506571402196},"Muted":{"color":"#628d9b","isDark":true,"contrast":3.8818866665042275},"DarkVibrant":{"color":"#08536a","isDark":true,"contrast":13.30121420712154},"DarkMuted":{"color":"#4d7e8e","isDark":true,"contrast":4.693454244598322},"LightVibrant":{"color":"#74d4e4","isDark":false,"contrast":1.7100585291773622},"LightMuted":{"color":"#769ca9","isDark":false,"contrast":2.958324937392382}},"json":"data/posts/2014/08/31/sae-chinese-keyword-extraction-service.json","tags":[{"name":"Algorithm","slug":"Algorithm","path":"tags/Algorithm/","permalink":"http://catx.me/tags/Algorithm/","postCount":2},{"name":"GitHub","slug":"GitHub","path":"tags/GitHub/","permalink":"http://catx.me/tags/GitHub/","postCount":9},{"name":"NLP","slug":"NLP","path":"tags/NLP/","permalink":"http://catx.me/tags/NLP/","postCount":1},{"name":"SAE","slug":"SAE","path":"tags/SAE/","permalink":"http://catx.me/tags/SAE/","postCount":1}],"categories":[]},"next":{"title":"高纬度地区不只有极光 还有夜光云","content":"<p><img src=\"/images/46f0d466ca6404ea0257f79e81f4beab8cdb8245.jpg\" alt=\"\"></p>\n<p>高纬度地区的群众们，除了能看到下雪、极光、受全球变暖影响融化中的冰川甚至北极熊以外，还有一个著名的独有的现象就是极光。</p>\n<p>所以上个冬天成都飘雪的时候，见多识广的高纬度同学都对激动的南方围观群众的内牛满面表示不解与淡定。</p>\n<p>不过这些都不是本文重点，接下来要介绍的夜光云（Noctilucent cloud），又是一种高纬度地区的群众才能围观到的美丽景象。最近欧洲又进入了夜光云季节，各种围观群众纷纷45度仰望，在一些专业网站（如<a href=\"http://spaceweather.com/\" target=\"_blank\" rel=\"external\">spaceweather</a>）也能找到观光指南。</p>\n<a id=\"more\"></a>\n<p><img src=\"/images/aa171b8034c5f86713be6f26d07c13646d2a9541.jpg\" alt=\"\"></p>\n<p>夜光云，简单的说，是一种，夜光的，云。对于这种绝对正确的废话，软件工程的同学们是非常熟悉的。（软件工程是神马？I.工程化的，写软件。II.对I这句废话的研究）</p>\n<p>详细的说起来，夜光云的外观具有非常诡异的美感：天鹅绒一样的质感，蓝色电晕一样的颜色，而且只出现在高纬度地区（50°~70°，南北半球均有，但南半球太过暗淡）夏天日落后的黄昏。</p>\n<p>不过尽管和极光有那么一点神似，其实它真的是云。形成在距地面76~85公里高度的中间层，是地球上最高的云。</p>\n<p><img src=\"/images/91d7a75c79ae37bc643da5764e050f8de1d849e8.jpg\" alt=\"\"></p>\n<p>上图为普通云层与夜光云的区别，可以看到夜光云高度更高，而且是发光（反光）而不是吸收光线。</p>\n<p>关于夜光云的形成，目前认为其主体是中间层直径为100纳米左右的冰晶，平时非常暗淡不容易观察到，在夏天时中间层温度最低，冰晶密度增大，由于日落后阳光的照射而反光可见（此时低层大气和地面已经受不到阳光照射，故称其夜光）。</p>\n<p>关于夜光云最早的记载在1885年，喀拉喀托火山爆发后的2年。至于夜光云是因为火山的爆发才开始出现，还是因为火山爆发后，日落变得更加壮观，围观群众变多提高了它被发现的概率，这就不为人知了。</p>\n<p><img src=\"/images/9c3e2cf631191e1eba4a6263e7a64f73fb04cc82.jpg\" alt=\"\"></p>\n<p>夜光云的出现在工业革命后20世纪开始增多，并且最近几年越来越频繁并且范围也有所扩大，研究表明这与人类活动导致的全球变暖有密切联系（-_-又是你们人类干的好事）。气候模型指出，温室气体的增加导致中间层的温度降低，因为更多的太阳辐射被低层大气吸收。另有理论计算表明，畜牧业的发展所增加的甲烷排放在过去的一百年中翻了一倍，使得上层大气中的水蒸气含量大幅度增加。</p>\n<p>所以你们人类在组成观光团围观这一美景的时候，想想Windows死机时的蓝屏也差不多是这个颜色，好自为之吧。</p>\n","date":"2011-06-05T16:19:51.000Z","path":"2011/06/06/noctilucent-cloud/","isDark":true,"featureColor":"#2b6a7d","featureImage":"/image/stock/3.jpg","excerpt":"<p><img src=\"/images/46f0d466ca6404ea0257f79e81f4beab8cdb8245.jpg\" alt=\"\"></p>\n<p>高纬度地区的群众们，除了能看到下雪、极光、受全球变暖影响融化中的冰川甚至北极熊以外，还有一个著名的独有的现象就是极光。</p>\n<p>所以上个冬天成都飘雪的时候，见多识广的高纬度同学都对激动的南方围观群众的内牛满面表示不解与淡定。</p>\n<p>不过这些都不是本文重点，接下来要介绍的夜光云（Noctilucent cloud），又是一种高纬度地区的群众才能围观到的美丽景象。最近欧洲又进入了夜光云季节，各种围观群众纷纷45度仰望，在一些专业网站（如<a href=\"http://spaceweather.com/\">spaceweather</a>）也能找到观光指南。</p>","featureSwatch":{"Vibrant":{"color":"#2b6a7d","isDark":true,"contrast":6.152506571402196},"Muted":{"color":"#628d9b","isDark":true,"contrast":3.8818866665042275},"DarkVibrant":{"color":"#08536a","isDark":true,"contrast":13.30121420712154},"DarkMuted":{"color":"#4d7e8e","isDark":true,"contrast":4.693454244598322},"LightVibrant":{"color":"#74d4e4","isDark":false,"contrast":1.7100585291773622},"LightMuted":{"color":"#769ca9","isDark":false,"contrast":2.958324937392382}},"json":"data/posts/2011/06/06/noctilucent-cloud.json","tags":[{"name":"云","slug":"云","path":"tags/云/","permalink":"http://catx.me/tags/云/","postCount":1},{"name":"天文","slug":"天文","path":"tags/天文/","permalink":"http://catx.me/tags/天文/","postCount":1}],"categories":[{"name":"天文","slug":"天文","path":"categories/天文/","permalink":"http://catx.me/categories/天文/","postCount":1}]}}