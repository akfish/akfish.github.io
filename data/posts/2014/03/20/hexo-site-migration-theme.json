{"type":"post","json_base":"data/posts","json":"data/posts/2014/03/20/hexo-site-migration-theme.json","path":"2014/03/20/hexo-site-migration-theme/","data":{"title":"Hexo站点迁移主题","content":"<h2 id=\"u4ECB_u7ECD\"><a href=\"#u4ECB_u7ECD\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>今天把博客从<code>blog.catx.me</code>迁移到了<code>catx.me</code>，并关闭了原来的wordpress博客，算是完成了迁移的工作。<br>由于在过渡期也有若干个项目引用了博客的URL，所以迁移最后需要解决的问题是改变域名过后的重定向。<br>重定向包括两个方面：</p>\n<ul>\n<li>通过原URL的访客不会死链，会自动跳转到新URL</li>\n<li>搜索引擎能自动重新索引，不会降低页面排名</li>\n</ul>\n<p>实现的原理就是在每个页面的<code>&lt;head&gt;</code>部分添加两个标签：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"title\">meta</span> <span class=\"attribute\">http-equiv</span>=<span class=\"value\">\"refresh\"</span> <span class=\"attribute\">content</span>=<span class=\"value\">\"0; url=http://new.domain.com/same/relative/url/of/old/site/\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"title\">link</span> <span class=\"attribute\">rel</span>=<span class=\"value\">\"canonical\"</span> <span class=\"attribute\">href</span>=<span class=\"value\">\"http://new.domain.com/same/relative/url/of/old/site/\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>第一个是给人看的，第二个是给机器看的。</p>\n<p>前者会自动让浏览器跳转到新的域名，后者在搜索引擎的bot下次抓取页面的时候读取，重新索引到新的URL。</p>\n<p>对于较大的站点，人肉在每个页面的标签很是麻烦，于是做了一个hexo的主题来实现这样一个功能（当然也有其他方式，不过主题是最简单的）。这并不是一个真正的主题，因为没有任何内容会被访问者看到。这个主题唯一的用途就是生成一个结构完全相同的站点，把每个页面重定向到一个新的域名上。</p>\n<h2 id=\"u4F7F_u7528\"><a href=\"#u4F7F_u7528\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>以把在<code>blog.catx.me</code>上的站点迁移到<code>catx.me</code>上为例，创建repo、修改DNS、修改CNAME这些部署上的细节大同小异而又千变万化，不在此说明，过程如下：</p>\n<ul>\n<li>创建一个hexo博客文件夹的副本</li>\n<li>在副本文件夹中安装这个主题：</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/akfish/hexo-theme-redirect.git themes/redirect</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改副本站点的<code>_config.yml</code>文件，使用主题：</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: redirect</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改副本站点的<code>_config.yml</code>文件，添加如下行指定新域名：</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new_domain: catx.me</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改副本站点的部署配置，部署到<code>blog.catx.me</code>(老域名)</li>\n<li>修改原站点的部署配置，部署到<code>catx.me</code>(新域名)</li>\n</ul>\n<p>这样就完成了迁移工作，比如访问<a href=\"http://blog.catx.me\" target=\"_blank\" rel=\"external\">http://blog.catx.me</a>就会自动跳转到<a href=\"http://catx.me\">http://catx.me</a></p>\n<h2 id=\"u5176_u5B83\"><a href=\"#u5176_u5B83\" class=\"headerlink\" title=\"其它\"></a>其它</h2><p>如果你的站点部署在GitHub Pages上，老域名恰好在<code>yourname.github.io</code> repo的<code>CNAME</code>绑定过，那么你其它项目的GitHub Pages的URL也需要设置跳转。</p>\n<p>比如有个项目<code>foo</code>，原有的gh-pages地址就是<code>http://blog.catx.me/foo</code>，那么就可以在副本站点中运行：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page foo</span><br></pre></td></tr></table></figure>\n<p>部署后就能实现跳转。需要注意的是，hexo生成的页面路径全是小写，如果服务器是区分大小写的，就需要手动在<code>source</code>里修改成正确的形式。</p>\n<h2 id=\"u6E90_u4EE3_u7801\"><a href=\"#u6E90_u4EE3_u7801\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p><a href=\"https://github.com/akfish/hexo-theme-redirect\" target=\"_blank\" rel=\"external\">hexo-theme-redirect</a></p>\n","date":"2014-03-19T16:02:33.000Z","path":"2014/03/20/hexo-site-migration-theme/","isDark":true,"featureColor":"#2b6a7d","featureImage":"/image/stock/3.jpg","excerpt":"","featureSwatch":{"Vibrant":{"color":"#2b6a7d","isDark":true,"contrast":6.152506571402196},"Muted":{"color":"#628d9b","isDark":true,"contrast":3.8818866665042275},"DarkVibrant":{"color":"#08536a","isDark":true,"contrast":13.30121420712154},"DarkMuted":{"color":"#4d7e8e","isDark":true,"contrast":4.693454244598322},"LightVibrant":{"color":"#74d4e4","isDark":false,"contrast":1.7100585291773622},"LightMuted":{"color":"#769ca9","isDark":false,"contrast":2.958324937392382}},"json":"data/posts/2014/03/20/hexo-site-migration-theme.json","tags":[{"name":"Hexo","slug":"Hexo","path":"tags/Hexo/","permalink":"http://catx.me/tags/Hexo/","postCount":4},{"name":"migiration","slug":"migiration","path":"tags/migiration/","permalink":"http://catx.me/tags/migiration/","postCount":1},{"name":"theme","slug":"theme","path":"tags/theme/","permalink":"http://catx.me/tags/theme/","postCount":1}],"categories":[{"name":"挨踢","slug":"挨踢","path":"categories/挨踢/","permalink":"http://catx.me/categories/挨踢/","postCount":24}]},"sha1":"be02b23a8329a95ca4e4d20876a15e6a285ac656","prev":{"title":"Hexo UML插件","content":"<h2 id=\"u4ECB_u7ECD\"><a href=\"#u4ECB_u7ECD\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>技术类博客总是不可避免的要插入各种UML图，昨天偶然发现一个有意思的Javascript库<a href=\"http://jumly.tmtk.net/\" target=\"_blank\" rel=\"external\">Jumly</a>，用于渲染UML sequence diagram和robustness diagram。于是制作了一个hexo插件，便于在博客中插入。</p>\n<p><strong>Sequence Diagram</strong><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@found &#34;You&#34;, -&#62;&#10;  @message &#34;Think&#34;, -&#62;&#10;    @message &#34;Write your idea&#34;, &#34;hexo-tag-uml&#34;, -&#62;&#10;      @message &#34;&#34;, &#34;JUMLY&#34;, -&#62;&#10;        @create &#34;Diagram&#34;&#10;hexo_tag_uml.css &#34;background-color&#34;:&#34;#8CC84B&#34;</span><br></pre></td></tr></table></figure></p>\n<p><strong>Robustness Diagram</strong><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@actor &#34;User&#34; :-&#62; @view &#34;Browser&#34;&#10;@view &#34;Browser&#34; :-&#62; @controller &#34;Server&#34;&#10;@controller &#34;Server&#34; :-&#62; @entity &#34;Database&#34;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"u5B89_u88C5\"><a href=\"#u5B89_u88C5\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-tag-uml --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"u521D_u59CB_u5316\"><a href=\"#u521D_u59CB_u5316\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>在blog文件夹中执行：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo uml install</span><br></pre></td></tr></table></figure>\n<p>在<code>_config.yml</code>文件中添加：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins:&#10;- hexo-tag-uml</span><br></pre></td></tr></table></figure></p>\n<p>在主题的<code>.ejs</code>文件的合适位置插入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"title\">%-</span> <span class=\"attribute\">partial</span>('<span class=\"attribute\">jumly</span>') %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>一般而言可以放在<code>&lt;head&gt;</code>一节里，需要注意的是Jumly依赖于jQuery，如果主题里引用了其它位置的jQuery，会导致冲突。<br>比如hexo的默认主题landscape就在<code>after-footer.ejs</code>中插入了jQuery，需要将相应行去掉，替换为上面语句。<br>也是因为实际主题的实现哥又不同，这个插件没能实现自动修改theme layout文件。</p>\n<h2 id=\"u8BED_u6CD5\"><a href=\"#u8BED_u6CD5\" class=\"headerlink\" title=\"语法\"></a>语法</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&amp;#37; uml [diagram_type] %&#125;</span><br><span class=\"line\">&#123;&amp;#37; uml %&#125;</span><br></pre></td></tr></table></figure>\n<p><code>diagram_type</code>可以取的值为：</p>\n<ul>\n<li>sequence</li>\n<li>robustness</li>\n</ul>\n<p>如果留空，默认为sequence。</p>\n<h2 id=\"u793A_u4F8B\"><a href=\"#u793A_u4F8B\" class=\"headerlink\" title=\"示例\"></a>示例</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&amp;#37; uml %&#125;</span><br><span class=\"line\">@found \"Browser\", -&gt;</span><br><span class=\"line\">  @alt &#123;</span><br><span class=\"line\"><span class=\"code\">    \"[200]\": -&gt; @message \"GET href resources\", \"HTTP Server\"</span></span><br><span class=\"line\"><span class=\"code\">    \"[301]\": -&gt; @ref \"GET the moved page\"</span></span><br><span class=\"line\"><span class=\"code\">    \"[404]\": -&gt; @ref \"show NOT FOUND\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">@find(\".ref\").css(width:256, \"padding-bottom\":4)</span><br><span class=\"line\">  .find(\".tag\").css float:\"left\"</span><br><span class=\"line\">get<span class=\"emphasis\">_the_</span>moved_page.css \"background-color\":\"#80c080\"</span><br><span class=\"line\">show<span class=\"emphasis\">_not_</span>found.css \"background-color\":\"#f0b0b0\"</span><br><span class=\"line\">&#123;&amp;#37; enduml %&#125;</span><br></pre></td></tr></table></figure>\n<p>效果</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@found &#34;Browser&#34;, -&#62;&#10;  @alt &#123;&#10;    &#34;[200]&#34;: -&#62; @message &#34;GET href resources&#34;, &#34;HTTP Server&#34;&#10;    &#34;[301]&#34;: -&#62; @ref &#34;GET the moved page&#34;&#10;    &#34;[404]&#34;: -&#62; @ref &#34;show NOT FOUND&#34;&#10;  &#125;&#10;@find(&#34;.ref&#34;).css(width:256, &#34;padding-bottom&#34;:4)&#10;  .find(&#34;.tag&#34;).css float:&#34;left&#34;&#10;get_the_moved_page.css &#34;background-color&#34;:&#34;#80c080&#34;&#10;show_not_found.css &#34;background-color&#34;:&#34;#f0b0b0&#34;</span><br></pre></td></tr></table></figure>\n<p>Jumly的表达式规则详见：<a href=\"http://jumly.tmtk.net/reference.html\" target=\"_blank\" rel=\"external\">Jumly Reference Manual</a></p>\n<p>在线编辑器：<a href=\"http://jumly.tmtk.net/try.html\" target=\"_blank\" rel=\"external\">Try Jumly</a></p>\n","date":"2014-03-12T06:23:37.000Z","path":"2014/03/12/hexo-uml-tag-plugin/","isDark":true,"featureColor":"#2f5a75","featureImage":"/image/stock/2.jpg","excerpt":"","featureSwatch":{"Vibrant":{"color":"#2f5a75","isDark":true,"contrast":12.293085300100254},"Muted":{"color":"#64767c","isDark":true,"contrast":5.234975288978602},"DarkVibrant":{"color":"#1f4b68","isDark":true,"contrast":13.414009026295917},"DarkMuted":{"color":"#477084","isDark":true,"contrast":5.611238656641319},"LightVibrant":{"color":"#ecdabf","isDark":false,"contrast":1.3683052639522741},"LightMuted":{"color":"#95b1b5","isDark":false,"contrast":2.274202152883682}},"json":"data/posts/2014/03/12/hexo-uml-tag-plugin.json","tags":[{"name":"CoffeeScript","slug":"CoffeeScript","path":"tags/CoffeeScript/","permalink":"http://catx.me/tags/CoffeeScript/","postCount":9},{"name":"GitHub","slug":"GitHub","path":"tags/GitHub/","permalink":"http://catx.me/tags/GitHub/","postCount":9},{"name":"Hexo","slug":"Hexo","path":"tags/Hexo/","permalink":"http://catx.me/tags/Hexo/","postCount":4},{"name":"Jumly","slug":"Jumly","path":"tags/Jumly/","permalink":"http://catx.me/tags/Jumly/","postCount":1},{"name":"Node.Js","slug":"Node-Js","path":"tags/Node-Js/","permalink":"http://catx.me/tags/Node-Js/","postCount":4},{"name":"UML","slug":"UML","path":"tags/UML/","permalink":"http://catx.me/tags/UML/","postCount":1}],"categories":[{"name":"挨踢","slug":"挨踢","path":"categories/挨踢/","permalink":"http://catx.me/categories/挨踢/","postCount":24}]},"next":{"title":"Hexo外链图片迁移插件","content":"<p>这两天打算把博客从Wordpress迁移到GitHub Page上，主要原因还是Wordpress的编辑不如Markdown来得爽，这个主机也不如GitHub服务器的速度和可访问性高。</p>\n<p>GitHub Pages的博客框架有很多选择，最终决定用基于Node.Js的<a href=\"https://github.com/tommy351/hexo\" target=\"_blank\" rel=\"external\">Hexo</a>，速度比官方的Jekyll系框架要快，并且不用折腾ruby。在使用<a href=\"https://github.com/hexojs/hexo-migrator-wordpress\" target=\"_blank\" rel=\"external\">hexo-migrator-wordpress</a>迁移文章后，发现所有图片依然是保持外链。翻了下Hexo的文档，自己写了个migrator迁移所有外链图片，流程很简单：</p>\n<ul>\n<li>打开所有.md文件</li>\n<li>扫描并解析Markdown插入图片的tag</li>\n<li>下载所有非本站的图片（包括本地图片）到images目录</li>\n<li>更新所有引用的url</li>\n</ul>\n<p>迁移前简单的通过对url做SHA1 hash可以避免部分图片重复，目前懒得对文件内容做对比，暂时是够用了。</p>\n<p>有了这个工具不仅能够完成迁移，以后写文章的时候也不用人肉拷贝图片算链接，只需要直接引用，发布前跑一次就行了。</p>\n<p>安装：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-image</span><br></pre></td></tr></table></figure></p>\n<p>使用：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo migrate image</span><br></pre></td></tr></table></figure></p>\n<p>源代码：<a href=\"https://github.com/akfish/hexo-migrator-image\" target=\"_blank\" rel=\"external\">hexo-migrator-image</a></p>\n","date":"2014-03-06T19:03:22.000Z","path":"2014/03/07/hexo-migrator-image/","isDark":true,"featureColor":"#266cb4","featureImage":"/image/stock/1.jpg","excerpt":"","featureSwatch":{"Vibrant":{"color":"#266cb4","isDark":true,"contrast":5.450121616568956},"Muted":{"color":"#4b70a6","isDark":true,"contrast":5.296212493095912},"DarkVibrant":{"color":"#3260a1","isDark":true,"contrast":10.521199995853594},"DarkMuted":{"color":"#515787","isDark":true,"contrast":11.462157427934459},"LightVibrant":{"color":"#5791c6","isDark":true,"contrast":3.512948192359975},"LightMuted":{"color":"#9bb4cc","isDark":false,"contrast":2.144138719552091}},"json":"data/posts/2014/03/07/hexo-migrator-image.json","tags":[{"name":"CoffeeScript","slug":"CoffeeScript","path":"tags/CoffeeScript/","permalink":"http://catx.me/tags/CoffeeScript/","postCount":9},{"name":"GitHub","slug":"GitHub","path":"tags/GitHub/","permalink":"http://catx.me/tags/GitHub/","postCount":9},{"name":"Hexo","slug":"Hexo","path":"tags/Hexo/","permalink":"http://catx.me/tags/Hexo/","postCount":4},{"name":"Node.Js","slug":"Node-Js","path":"tags/Node-Js/","permalink":"http://catx.me/tags/Node-Js/","postCount":4}],"categories":[{"name":"挨踢","slug":"挨踢","path":"categories/挨踢/","permalink":"http://catx.me/categories/挨踢/","postCount":24}]}}